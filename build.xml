<?xml version="1.0" encoding="UTF-8"?>

<project name="isde_telegram_bot" default="start" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
    <!--<property name="server.url" value="https://pacific-crag-3303.herokuapp.com/ws/people?wsdl"/>-->
    <property name="server.url" value="https://calm-thicket-15896.herokuapp.com/ws/pcservice?wsdl"/>

    <!-- PART 1: Ivy properties, download, installation and configuration -->
    <property name="ivy.install.version" value="2.4.0-rc1"/>
    <property name="ivy.jar.dir" value="${basedir}/ivy"/>
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar"/>
    <!-- this targe will donwload ivy.jar if its inot in the "ivy" folder yet -->
    <target name="download-ivy" unless="skip.download">
        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <echo message="installing ivy..."/>
        <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="install-ivy" depends="download-ivy" description="--> install ivy">

        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>


    <!-- PART 2: General properties definitions -->
    <property name="build.dir" value="build"/>
    <property name="src.dir" value="src"/>
    <property name="src.gen.dir" value="src/com/unitn/storage_service"/>
    <property name="lib.dir" value="libs"/>

        <path id="lib.path.id">
        <fileset dir="${lib.dir}"/>
    </path>

    <!-- =================================
          target: resolve downloads the dependencies to your lib folder
         ================================= -->
    <target name="resolve" depends="install-ivy" description="--> retrieve dependencies with ivy">
        <ivy:retrieve pattern="${lib.dir}/[type]s-[artifact]-[revision].[ext]"/>
    </target>
    <!-- paths where ivy libraries will be downloaded, use them as classpathref in your compilation and running tasks  -->
    <path id="lib.path.id">
        <fileset dir="${lib.dir}"/>
    </path>
    <path id="run.path.id">
        <path refid="lib.path.id"/>
        <fileset dir="${build.dir}">
            <include name="*.class"/>
            <include name="**/*.class"/>
            <exclude name="**/*Test*"/>
        </fileset>
    </path>

    <!-- PART 3: compilation and execution targets for this session -->
    <target name="init" depends="install-ivy, resolve">
        <echo message="Init has been called"/>
        <mkdir dir="${build.dir}"/>
        <echo message="${build.dir} has been created"/>
    </target>

    <target name="clean">
        <echo message="Clean has been called"/>
        <delete dir="${build.dir}"/>
        <echo message="${build.dir} has been deleted"/>
    </target>

    <target name="generate-client">
        <delete dir="${src.gen.dir}"/>
        <exec executable="${java.home}/../bin/wsimport">
            <arg line="-d src -keep  ${server.url}"/>
        </exec>
    </target>



    <target name="install" depends="clean, init">
        <echo message="Compile target has been called"/>
        <echo message="Using java ${ant.java.version}"/>


        <javac srcdir="${src.dir}" destdir="${build.dir}"
               includeAntRuntime="false"
               classpathref="lib.path.id"
               target="1.7" source="1.7"
               debug="true">
        </javac>

        <copy todir="${build.dir}" overwrite="true">
            <fileset dir="${src.dir}">
                <include name="*.xml"/>
                <include name="**/*.xml"/>
            </fileset>
        </copy>
    </target>



    <target name="start" depends="install">
        <java classname="com.unitn.telegram_bot.Bot" classpath="${build.dir}" fork="true">
            <arg value="$JAVA_OPTS  -cp"/>
            <classpath>
                <path location="build"/>
                <fileset dir="libs">
                    <include name="**/*.jar"/>
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>


</project>
